// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        (unknown)
// source: exam/exam.proto

package exam

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Exam struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        uint32                 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name      string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Duration  uint32                 `protobuf:"varint,3,opt,name=duration,proto3" json:"duration,omitempty"` // duration in minutes
	Questions []*Question            `protobuf:"bytes,4,rep,name=questions,proto3" json:"questions,omitempty"`
	ProgramId uint32                 `protobuf:"varint,5,opt,name=programId,proto3" json:"programId,omitempty"`
	CreatedAt *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	UpdatedAt *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`
}

func (x *Exam) Reset() {
	*x = Exam{}
	if protoimpl.UnsafeEnabled {
		mi := &file_exam_exam_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Exam) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Exam) ProtoMessage() {}

func (x *Exam) ProtoReflect() protoreflect.Message {
	mi := &file_exam_exam_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Exam.ProtoReflect.Descriptor instead.
func (*Exam) Descriptor() ([]byte, []int) {
	return file_exam_exam_proto_rawDescGZIP(), []int{0}
}

func (x *Exam) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Exam) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Exam) GetDuration() uint32 {
	if x != nil {
		return x.Duration
	}
	return 0
}

func (x *Exam) GetQuestions() []*Question {
	if x != nil {
		return x.Questions
	}
	return nil
}

func (x *Exam) GetProgramId() uint32 {
	if x != nil {
		return x.ProgramId
	}
	return 0
}

func (x *Exam) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *Exam) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

type CreateExamRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name      string                   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Duration  uint32                   `protobuf:"varint,2,opt,name=duration,proto3" json:"duration,omitempty"`
	Questions []*CreateQuestionRequest `protobuf:"bytes,3,rep,name=questions,proto3" json:"questions,omitempty"`
	ProgramId uint32                   `protobuf:"varint,4,opt,name=programId,proto3" json:"programId,omitempty"`
}

func (x *CreateExamRequest) Reset() {
	*x = CreateExamRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_exam_exam_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateExamRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateExamRequest) ProtoMessage() {}

func (x *CreateExamRequest) ProtoReflect() protoreflect.Message {
	mi := &file_exam_exam_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateExamRequest.ProtoReflect.Descriptor instead.
func (*CreateExamRequest) Descriptor() ([]byte, []int) {
	return file_exam_exam_proto_rawDescGZIP(), []int{1}
}

func (x *CreateExamRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateExamRequest) GetDuration() uint32 {
	if x != nil {
		return x.Duration
	}
	return 0
}

func (x *CreateExamRequest) GetQuestions() []*CreateQuestionRequest {
	if x != nil {
		return x.Questions
	}
	return nil
}

func (x *CreateExamRequest) GetProgramId() uint32 {
	if x != nil {
		return x.ProgramId
	}
	return 0
}

type UpdateExamRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        uint32                   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name      string                   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Duration  uint32                   `protobuf:"varint,3,opt,name=duration,proto3" json:"duration,omitempty"`
	Questions []*UpdateQuestionRequest `protobuf:"bytes,4,rep,name=questions,proto3" json:"questions,omitempty"`
	ProgramId uint32                   `protobuf:"varint,5,opt,name=programId,proto3" json:"programId,omitempty"`
}

func (x *UpdateExamRequest) Reset() {
	*x = UpdateExamRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_exam_exam_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateExamRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateExamRequest) ProtoMessage() {}

func (x *UpdateExamRequest) ProtoReflect() protoreflect.Message {
	mi := &file_exam_exam_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateExamRequest.ProtoReflect.Descriptor instead.
func (*UpdateExamRequest) Descriptor() ([]byte, []int) {
	return file_exam_exam_proto_rawDescGZIP(), []int{2}
}

func (x *UpdateExamRequest) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UpdateExamRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UpdateExamRequest) GetDuration() uint32 {
	if x != nil {
		return x.Duration
	}
	return 0
}

func (x *UpdateExamRequest) GetQuestions() []*UpdateQuestionRequest {
	if x != nil {
		return x.Questions
	}
	return nil
}

func (x *UpdateExamRequest) GetProgramId() uint32 {
	if x != nil {
		return x.ProgramId
	}
	return 0
}

type ListQuestionsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ExamId    uint32 `protobuf:"varint,1,opt,name=examId,proto3" json:"examId,omitempty"`
	ProgramId uint32 `protobuf:"varint,2,opt,name=programId,proto3" json:"programId,omitempty"`
}

func (x *ListQuestionsRequest) Reset() {
	*x = ListQuestionsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_exam_exam_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListQuestionsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListQuestionsRequest) ProtoMessage() {}

func (x *ListQuestionsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_exam_exam_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListQuestionsRequest.ProtoReflect.Descriptor instead.
func (*ListQuestionsRequest) Descriptor() ([]byte, []int) {
	return file_exam_exam_proto_rawDescGZIP(), []int{3}
}

func (x *ListQuestionsRequest) GetExamId() uint32 {
	if x != nil {
		return x.ExamId
	}
	return 0
}

func (x *ListQuestionsRequest) GetProgramId() uint32 {
	if x != nil {
		return x.ProgramId
	}
	return 0
}

var File_exam_exam_proto protoreflect.FileDescriptor

var file_exam_exam_proto_rawDesc = []byte{
	0x0a, 0x0f, 0x65, 0x78, 0x61, 0x6d, 0x2f, 0x65, 0x78, 0x61, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x04, 0x65, 0x78, 0x61, 0x6d, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x13, 0x65, 0x78, 0x61, 0x6d, 0x2f, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x86, 0x02,
	0x0a, 0x04, 0x45, 0x78, 0x61, 0x6d, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x75,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x64, 0x75,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2c, 0x0a, 0x09, 0x71, 0x75, 0x65, 0x73, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x65, 0x78, 0x61, 0x6d,
	0x2e, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x09, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x49,
	0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d,
	0x49, 0x64, 0x12, 0x38, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x38, 0x0a, 0x09,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0x9c, 0x01, 0x0a, 0x11, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x45, 0x78, 0x61, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x1a, 0x0a, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x39, 0x0a, 0x09,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x1b, 0x2e, 0x65, 0x78, 0x61, 0x6d, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x51, 0x75, 0x65,
	0x73, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x09, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x72, 0x6f, 0x67, 0x72,
	0x61, 0x6d, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x67,
	0x72, 0x61, 0x6d, 0x49, 0x64, 0x22, 0xac, 0x01, 0x0a, 0x11, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x45, 0x78, 0x61, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x1a, 0x0a, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x39, 0x0a, 0x09, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b,
	0x2e, 0x65, 0x78, 0x61, 0x6d, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x51, 0x75, 0x65, 0x73,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x09, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x61,
	0x6d, 0x49, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x67, 0x72,
	0x61, 0x6d, 0x49, 0x64, 0x22, 0x4c, 0x0a, 0x14, 0x4c, 0x69, 0x73, 0x74, 0x51, 0x75, 0x65, 0x73,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06,
	0x65, 0x78, 0x61, 0x6d, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x65, 0x78,
	0x61, 0x6d, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x49,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d,
	0x49, 0x64, 0x32, 0xd0, 0x01, 0x0a, 0x0b, 0x45, 0x78, 0x61, 0x6d, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x12, 0x31, 0x0a, 0x0a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x45, 0x78, 0x61, 0x6d,
	0x12, 0x17, 0x2e, 0x65, 0x78, 0x61, 0x6d, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x45, 0x78,
	0x61, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0a, 0x2e, 0x65, 0x78, 0x61, 0x6d,
	0x2e, 0x45, 0x78, 0x61, 0x6d, 0x12, 0x2b, 0x0a, 0x07, 0x47, 0x65, 0x74, 0x45, 0x78, 0x61, 0x6d,
	0x12, 0x14, 0x2e, 0x65, 0x78, 0x61, 0x6d, 0x2e, 0x47, 0x65, 0x74, 0x42, 0x79, 0x49, 0x64, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0a, 0x2e, 0x65, 0x78, 0x61, 0x6d, 0x2e, 0x45, 0x78,
	0x61, 0x6d, 0x12, 0x31, 0x0a, 0x0a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x45, 0x78, 0x61, 0x6d,
	0x12, 0x17, 0x2e, 0x65, 0x78, 0x61, 0x6d, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x45, 0x78,
	0x61, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0a, 0x2e, 0x65, 0x78, 0x61, 0x6d,
	0x2e, 0x45, 0x78, 0x61, 0x6d, 0x12, 0x2e, 0x0a, 0x0a, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x45,
	0x78, 0x61, 0x6d, 0x12, 0x14, 0x2e, 0x65, 0x78, 0x61, 0x6d, 0x2e, 0x47, 0x65, 0x74, 0x42, 0x79,
	0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0a, 0x2e, 0x65, 0x78, 0x61, 0x6d,
	0x2e, 0x45, 0x78, 0x61, 0x6d, 0x42, 0x6a, 0x0a, 0x08, 0x63, 0x6f, 0x6d, 0x2e, 0x65, 0x78, 0x61,
	0x6d, 0x42, 0x09, 0x45, 0x78, 0x61, 0x6d, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x23,
	0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x64, 0x6f, 0x74, 0x2d, 0x63,
	0x6f, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x67, 0x2f, 0x67, 0x65, 0x6e, 0x2f, 0x67, 0x6f, 0x2f, 0x65,
	0x78, 0x61, 0x6d, 0xa2, 0x02, 0x03, 0x45, 0x58, 0x58, 0xaa, 0x02, 0x04, 0x45, 0x78, 0x61, 0x6d,
	0xca, 0x02, 0x04, 0x45, 0x78, 0x61, 0x6d, 0xe2, 0x02, 0x10, 0x45, 0x78, 0x61, 0x6d, 0x5c, 0x47,
	0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x04, 0x45, 0x78, 0x61,
	0x6d, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_exam_exam_proto_rawDescOnce sync.Once
	file_exam_exam_proto_rawDescData = file_exam_exam_proto_rawDesc
)

func file_exam_exam_proto_rawDescGZIP() []byte {
	file_exam_exam_proto_rawDescOnce.Do(func() {
		file_exam_exam_proto_rawDescData = protoimpl.X.CompressGZIP(file_exam_exam_proto_rawDescData)
	})
	return file_exam_exam_proto_rawDescData
}

var file_exam_exam_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_exam_exam_proto_goTypes = []any{
	(*Exam)(nil),                  // 0: exam.Exam
	(*CreateExamRequest)(nil),     // 1: exam.CreateExamRequest
	(*UpdateExamRequest)(nil),     // 2: exam.UpdateExamRequest
	(*ListQuestionsRequest)(nil),  // 3: exam.ListQuestionsRequest
	(*Question)(nil),              // 4: exam.Question
	(*timestamppb.Timestamp)(nil), // 5: google.protobuf.Timestamp
	(*CreateQuestionRequest)(nil), // 6: exam.CreateQuestionRequest
	(*UpdateQuestionRequest)(nil), // 7: exam.UpdateQuestionRequest
	(*GetByIdRequest)(nil),        // 8: exam.GetByIdRequest
}
var file_exam_exam_proto_depIdxs = []int32{
	4, // 0: exam.Exam.questions:type_name -> exam.Question
	5, // 1: exam.Exam.createdAt:type_name -> google.protobuf.Timestamp
	5, // 2: exam.Exam.updatedAt:type_name -> google.protobuf.Timestamp
	6, // 3: exam.CreateExamRequest.questions:type_name -> exam.CreateQuestionRequest
	7, // 4: exam.UpdateExamRequest.questions:type_name -> exam.UpdateQuestionRequest
	1, // 5: exam.ExamService.CreateExam:input_type -> exam.CreateExamRequest
	8, // 6: exam.ExamService.GetExam:input_type -> exam.GetByIdRequest
	2, // 7: exam.ExamService.UpdateExam:input_type -> exam.UpdateExamRequest
	8, // 8: exam.ExamService.DeleteExam:input_type -> exam.GetByIdRequest
	0, // 9: exam.ExamService.CreateExam:output_type -> exam.Exam
	0, // 10: exam.ExamService.GetExam:output_type -> exam.Exam
	0, // 11: exam.ExamService.UpdateExam:output_type -> exam.Exam
	0, // 12: exam.ExamService.DeleteExam:output_type -> exam.Exam
	9, // [9:13] is the sub-list for method output_type
	5, // [5:9] is the sub-list for method input_type
	5, // [5:5] is the sub-list for extension type_name
	5, // [5:5] is the sub-list for extension extendee
	0, // [0:5] is the sub-list for field type_name
}

func init() { file_exam_exam_proto_init() }
func file_exam_exam_proto_init() {
	if File_exam_exam_proto != nil {
		return
	}
	file_exam_question_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_exam_exam_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*Exam); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_exam_exam_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*CreateExamRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_exam_exam_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*UpdateExamRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_exam_exam_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*ListQuestionsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_exam_exam_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_exam_exam_proto_goTypes,
		DependencyIndexes: file_exam_exam_proto_depIdxs,
		MessageInfos:      file_exam_exam_proto_msgTypes,
	}.Build()
	File_exam_exam_proto = out.File
	file_exam_exam_proto_rawDesc = nil
	file_exam_exam_proto_goTypes = nil
	file_exam_exam_proto_depIdxs = nil
}
